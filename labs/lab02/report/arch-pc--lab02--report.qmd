---
## Author
author:
  name: Игнатенко Денис Беньяминович
  group: НПИбд-01-25
  email: 1032252476@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Отчет по лабораторной работе №2"
subtitle: "Архитектура компьютера"
license: "CC BY"
---

# Цель работы

Ознакомиться с системой контроля версий Git, настроить его, завести
репозиторий на сайте github и скинуть в него свои отчеты по лабораторным
работам.​


# Выполнение лабораторной работы
В @tbl-commands приведены основные команды, используемые при работе с Git.

: Основные команды, используемые при выполнении работы {#tbl-commands}

| Команда | Описание |
|---------|-----------|
| `git init` | создание основного дерева репозитория |
| `git pull` | получение обновлений (изменений) текущего дерева из центрального
репозитория |
| `git push ` | отправка всех произведённых изменений локального дерева в
центральный репозиторий |
| `git status` | просмотр списка изменённых файлов в текущей директории |
| `git add .` | Добавление всех изменений в индекс |
| `git diff ` | просмотр текущих изменений  |
| `git add .` | добавить все изменённые и/или созданные файлы и/или каталоги |
| `git add file_names` | добавить конкретные изменённые и/или созданные файлы и/или
каталоги |
| `git rm file_names` | удалить файл и/или каталог из индекса репозитория (при этом файл и/или каталог остаётся в локальной директории) |
| `git commit -am 'Description of commit'.` | сохранить все добавленные изменения и все изменённые файлы |
| `git checkout -b branch_name` | создание новой ветки, базирующейся на текущей |
| `git checkout branch_name` | переключение на некоторую ветку (при переключении на ветку, которой ещё нет в локальном репозитории, она будет создана и связана с удалённой) |
| `git push origin branch_name` | отправка изменений конкретной ветки в центральный репозиторий |
| `git merge --no-ff branch_name` | слияние ветки с текущим деревом |
| `git branch -d branch_name` | удаление локальной уже слитой с основным деревом ветки |
| `git branch -D branch_nam` | принудительное удаление локальной ветки |
| `git push origin :branch_name` | удаление ветки с центрального репозитория |

## Базовая настройка git:

Делаем предварительную настройку git. [рис. @fig-001]


![Задаем имя и почту репозитория.](./image/"Перенесенное изображение".png){#fig-001 width=90%}

![Настройка utf-8.](./image/"Перенесенное изображение (2)".png){#fig-002 width=90%}


![Задаем имя master для начальной ветки.](./image/"Перенесенное изображение (3)".png){#fig-003 width=90%}


![Устанавливаем настройку autocrlf.](./image/"Перенесенное изображение (4)".png){#fig-004 width=90%}


![Устанавливаем параметр safecrlf.](./image/"Перенесенное изображение (5)".png){#fig-005 width=90%}


## Создание SSH ключа.

![Генерируем пару ключей.](./image/"Перенесенное изображение (6)".png){#fig-006 width=90%}

![Копируем ключ из локальной консоли в буфер обмена.](./image/"Перенесенное изображение (7)".png){#fig-007 width=90%}

Переходим в свой GitHub аккаунт. Заходим в настройки и добавляем SSH ключ.

![Добавляем скопированный ключ и указываем имя ключа (например, ExampleSSHKey)](./image/"Перенесенное изображение (8)".png){#fig-008 width=90%}

![Проверяем существования SSH-ключа.](./image/"Перенесенное изображение (9)".png){#fig-009 width=90%}

## Сознание рабочего пространства и репозитория курса на основе шаблона.

Создаём необходимые директории.

![Создаем каталог для предмета “Архитектура компьютера”](./image/"Перенесенное изображение (10)".png){#fig-010 width=90%}

## Создание репозитория курса.

Переходим на страницу репозитория с шаблоном.

![Создаем репозиторий по шаблону и называем его “study_2025-2026_arh-pc”](./image/"Перенесенное изображение (11)".png){#fig-011 width=90%}

Открываем терминал.

![Переходим в каталог курса.](./image/"Перенесенное изображение (12)".png){#fig-012 width=90%}

![Клонируем наш репозиторий.](./image/"Перенесенное изображение (13)".png){#fig-013 width=90%}

## Настройка каталога курса:

![Переходим в каталог курса.](./image/"Перенесенное изображение (14)".png){#fig-014 width=90%}

![Создаем необходимые каталоги.](./image/"Перенесенное изображение (15)".png){#fig-015 width=90%}

![Добавляем изменения и создаем коммит.](./image/"Перенесенное изображение (16)".png){#fig-016 width=90%}

![Отправляем данные в репозиторий.](./image/"Перенесенное изображение (17)".png){#fig-017 width=90%}

![Проверяем выполнение команд в консоли.](./image/"Перенесенное изображение (18)".png){#fig-018 width=90%}

![](./image/"Перенесенное изображение (19)".png){#fig-019 width=90%}

![](./image/"Перенесенное изображение (20)".png){#fig-020 width=90%}

![](./image/"Перенесенное изображение (21)".png){#fig-021 width=90%}

![Проверяем выполнение команд в github.](./image/"Перенесенное изображение (22)".png){#fig-022 width=90%}


# Выполнение самостоятельной работы:

## Создайте отчет по выполнению лабораторной работы №2 в соответствующем каталоге рабочего пространства

![Проверяем существование нашего файла с отчетом.](./image/"Перенесенное изображение (23)".png){#fig-023 width=90%}

## Скопируйте отчеты по выполнению предыдущих лабораторных работ в
соответствующие каталоги созданного рабочего пространства.

![Скопировали первую лабораторную работу в соответствующий каталог и проверили корректность выполнения копирования.](./image/"Перенесенное изображение (24)".png){#fig-024 width=90%}

## Загрузите файлы на github.

![Добавляем коммит с первой лабораторной работой и отправляем на сервер.](./image/"Перенесенное изображение (25)".png){#fig-025 width=90%}

![Добавляем коммит со второй лабораторной работой и отправляем на сервер.](./image/"Перенесенное изображение (26)".png){#fig-026 width=90%}

![Проверяем коммиты в консоли.](./image/"Перенесенное изображение (27)".png){#fig-027 width=90%}

![Проверяем коммиты в github.](./image/"Перенесенное изображение (28)".png){#fig-028 width=90%}

# Выводы

Мы познакомились с системой контроля git, выучили команды для работы с ним,
создали свой репозиторий на платформе github, где в последствии будут храниться
все будущие отчеты по лабораторным работам.

::: {#refs}
:::
